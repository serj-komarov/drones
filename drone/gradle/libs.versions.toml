[versions]
spring-boot = "3.0.4"
spring-doc = "1.7.0"
mapstruct = "1.5.4.Final"
testcontainers = "1.18.0"
junit = "5.9.3"

[libraries]
# SpringBoot
spring-boot-starter-web = { module = "org.springframework.boot:spring-boot-starter-web" }
spring-boot-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator" }
spring-boot-starter-data-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa" }
spring-boot-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test" }
spring-boot-starter-logging = { module = "org.springframework.boot:spring-boot-starter-logging" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor" }
spring-jdbc = { module = "org.springframework:spring-jdbc" }
# DB
postgres = { module = "org.postgresql:postgresql" }
liquibase-core = { module = "org.liquibase:liquibase-core", version = "4.21.1" }
hibernate-core = { module = "org.hibernate:hibernate-core", version = "6.1.7.Final" }
hibernate-types = { module = "com.vladmihalcea:hibernate-types-60", version = "2.21.1" }

# Others
lombok = { module = "org.projectlombok:lombok", version = "1.18.26" }
jakarta-persistence-api = { module = "jakarta.persistence:jakarta.persistence-api", version = "3.1.0" }
mapstruct = { module = "org.mapstruct:mapstruct", version.ref = "mapstruct" }
mapstructproc = { module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct" }

# Swagger
springdocstarter = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version = "2.1.0" }
springdocopenapiui = { module = "org.springdoc:springdoc-openapi-ui", version.ref = "spring-doc" }
springdocopenapiwebmvc = { module = "org.springdoc:springdoc-openapi-webmvc-core", version.ref = "spring-doc" }

# Tests
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainerspostgresql = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainersjunitjupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
junit-jupiter-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
assertj-core = { module = "org.assertj:assertj-core", version = "3.24.1" }
restassured = { module = "io.rest-assured:spring-mock-mvc", version = "5.2.1" }